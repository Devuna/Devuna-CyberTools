[MODULE]
[COMMON]
FROM ABC GENERATED
MODIFIED '2017/06/09' '22:12:28'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
!region Notices
! ================================================================================ 
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html) 
! 
!    This file is part of Devuna-CyberTools (https://github.com/Devuna/Devuna-CyberTools) 
! 
!    Devuna-CyberTools is free software: you can redistribute it and/or modify 
!    it under the terms of the GNU General Public License as published by 
!    the Free Software Foundation, either version 3 of the License, or 
!    (at your option) any later version. 
! 
!    Devuna-CyberTools is distributed in the hope that it will be useful, 
!    but WITHOUT ANY WARRANTY; without even the implied warranty of 
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
!    GNU General Public License for more details. 
! 
!    You should have received a copy of the GNU General Public License 
!    along with this file.  If not, see <http://www.gnu.org/licenses/>. 
! ================================================================================ 
!EndRegion Notices
[END]
[END]
[PROCEDURE]
NAME Calculator
[COMMON]
DESCRIPTION 'Calculator'
FROM ABC Source
MODIFIED '2017/06/09' '22:50:29'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================ 
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html) 
! 
!    This file is part of Devuna-CyberTools (https://github.com/Devuna/Devuna-CyberTools) 
! 
!    Devuna-CyberTools is free software: you can redistribute it and/or modify 
!    it under the terms of the GNU General Public License as published by 
!    the Free Software Foundation, either version 3 of the License, or 
!    (at your option) any later version. 
! 
!    Devuna-CyberTools is distributed in the hope that it will be useful, 
!    but WITHOUT ANY WARRANTY; without even the implied warranty of 
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
!    GNU General Public License for more details. 
! 
!    You should have received a copy of the GNU General Public License 
!    along with this file.  If not, see <http://www.gnu.org/licenses/>. 
! ================================================================================ 
!EndRegion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Number     STRING(20)           !The current number displayed
Operand    REAL                 !The first operand for +,-,*,/,^ operations
Memory     REAL                 !The value contained in memory
Operation  REAL                 !The field number of the operation key
NewNumber  BYTE                 !True following = or %
Decimal    BYTE                 !True after pressing decimal point key
Digit      BYTE                 !Numeric digit represented by number key
Calculator WINDOW('Calculator'),AT(80,7,110,146),ICON('WINPYR.ICO'),SYSTEM,GRAY,DOUBLE,AUTO
       BUTTON('&0'),AT(29,127,14,12),FONT('Arial',12,,),KEY(KeyPad0),USE(?Zero)
       BUTTON('&1'),AT(29,111,14,12),FONT('Arial',12,,),KEY(KeyPad1),USE(?One)
       BUTTON('&2'),AT(47,111,14,12),FONT('Arial',12,,),KEY(KeyPad2),USE(?Two)
       BUTTON('&3'),AT(65,111,14,12),FONT('Arial',12,,),KEY(KeyPad3),USE(?Three)
       BUTTON('&4'),AT(29,97,14,12),FONT('Arial',12,,),KEY(KeyPad4),USE(?Four)
       BUTTON('&5'),AT(47,97,14,12),FONT('Arial',12,,),KEY(KeyPad5),USE(?Five)
       BUTTON('&6'),AT(65,97,14,12),FONT('Arial',12,,),KEY(KeyPad6),USE(?Six)
       BUTTON('&7'),AT(29,83,14,12),FONT('Arial',12,,),KEY(KeyPad7),USE(?Seven)
       BUTTON('&8'),AT(47,83,14,12),FONT('Arial',12,,),KEY(KeyPad8),USE(?Eight)
       BUTTON('&9'),AT(65,83,14,12),FONT('Arial',12,,),KEY(KeyPad9),USE(?Nine)
       BUTTON('.'),AT(47,127,14,12),FONT('Arial',12,,),KEY(DecimalKey),USE(?Decimal)
       BUTTON('CE'),AT(10,127,14,12),FONT('Arial',10,,),TIP('Clear Entry'),USE(?Clear)
       BUTTON('p'),AT(10,97,14,12),FONT('Symbol',12,,),TIP('Pi'),USE(?Pi)
       BUTTON('+/-'),AT(10,111,14,12),FONT('Arial',10,,),TIP('Reverse Sign'),USE(?Sign)
       BUTTON('x<178>'),AT(47,68,14,12),FONT('Arial',10,,),TIP('Squared'),USE(?Square)
       BUTTON('Ö'),AT(29,68,14,12),FONT('Symbol',12,,),TIP('Square Root'),USE(?Root)
       BUTTON('1/x'),AT(84,68,14,12),FONT('Arial',10,,),TIP('Reciprical'),USE(?Reciprical)
       BUTTON('10X'),AT(10,68,14,12),FONT('Ariel',10,,),TIP('Multiply by Ten'),USE(?TenTimes)
       BUTTON('%'),AT(10,83,14,12),FONT('Arial',12,,),TIP('Percent'),USE(?Percent)
       BUTTON('CM'),AT(29,53,14,12),FONT('Arial',11,,),TIP('Clear Memory'),USE(?MemClear)
       BUTTON(' C'),AT(10,53,14,12),FONT('Arial',11,,),TIP('Clear All'),USE(?ClearAll)
       BUTTON('RM'),AT(47,53,14,12),FONT('Arial',10,,),TIP('Recall Memory'),USE(?MemRecall)
       BUTTON(' M -'),AT(65,53,14,12),FONT('Arial',10,,),TIP('Subtract from Memory'),USE(?MemMinus)
       BUTTON(' M+'),AT(84,53,14,12),FONT('Arial',10,,),TIP('Add to Memory'),USE(?MemPlus)
       BUTTON('+'),AT(84,127,14,12),FONT('Arial',12,,),TIP('Add'),KEY(PlusKey),USE(?Add)
       BUTTON('-'),AT(84,111,14,12),FONT('Arial',12,,),TIP('Subtract'),KEY(MinusKey),USE(?Subtract)
       BUTTON('x'),AT(84,97,14,12),FONT('Arial',12,,),TIP('Multiple'),KEY(AstKey),USE(?Multiply)
       BUTTON('/'),AT(84,83,14,12),FONT('Arial',12,,),TIP('Divide'),KEY(SlashKey),USE(?Divide)
       BUTTON('Exp'),AT(65,68,14,12),FONT('Arial',8,,),TIP('Exponential'),USE(?Power)
       BUTTON('='),AT(65,127,14,12),FONT('Arial',12,,),TIP('Equal'),KEY(EnterKey),USE(?Equal)
       STRING('Memory:'),AT(4,36,30,10),LEFT
       STRING(@S20),AT(32,36,65,10),FONT(,8,,),USE(Memory),RIGHT
       ENTRY(@s20),AT(9,12,90,16),USE(Number),RIGHT(3),INS
     END
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  OPEN(Calculator)                      !Open the calculator window
  NewNumber = True                      !Start with a new number
  Decimal = False                       !No decimal point has been entered
  Operation = ?Equal                    !No outstanding operation
!-----------------------------------------------------------------------------
!
!     ACCEPT...END is a control structure that processes the events
!     posted by the open window.  These events may be related to control
!     fields (e.g. a button was pressed or a text field was entered).
!     or they may be related to the window (e.g. a non-modal window is
!     about to lose focus or the window is about be be closed by the
!     system menu).  When an ACCEPT loop cycles, these functions supply
!     information about the event that is to be processed:
!
!     EVENT()    returns the event number that occurred.  EQUATES.CLW
!                contains labels for these events.
!     FIELD()    returns the field number that currently has focus.
!                Field numbers are referenced with field equate labels.
!     SELECTED() returns the field number that is to receive focus
!                during a "new field selected" event.  For any other
!                event, SELECTED() returns 0.
!     ACCEPTED() returns the field number for any control field event.
!                For other events, ACCEPTED() returns 0.
!
!-----------------------------------------------------------------------------
  ACCEPT                                !Enable windows and wait for an event
    DISPLAY
    If NewNumber
      First# = 0
    End
    IF ACCEPTED()                         ! user has caused accepted event
      CASE ACCEPTED()                     ! Jump to the accepted field
      OF ?Zero TO ?Nine                   ! For a numeric key
        Digit = ACCEPTED() - ?Zero        !  The digit is the field number
        IF NewNumber                      !  For the first digit
          If Decimal
            Number = '.' & Digit
            NewNumber = False             !   Turn NewNumber flag off
            First# = 1
          Else
            Number = Digit                !   Set the number to the digit
            NewNumber = False             !   Turn NewNumber flag off
            Decimal = False               !   Turn decimal point flag off
          End
        ELSE                              !   For any other digit
          IF Decimal                      !    For a fractional digit
            If First# = 0
              Number = CLIP(Number) & '.' & Digit !     Concatenate the digit
              First# = 1
            ELSE
              Number = CLIP(Number) & Digit !     Concatenate the digit
            End
          ELSE                            !    For an integer digit
            Number = Number * 10 + Digit  !     Multipy by 10 and add the digit
          END                             !    End the IF
        END                               !   End the IF
        CYCLE                             !   Continue number entry
      OF ?Decimal                         ! For the decimal point key
        Decimal = True                    !  Turn decimal point flag on
        CYCLE                             !  Continue number entry
      OF ?Pi                              ! For the Pi key
        Number = 3.141592654              !  Set number to Pi
        NewNumber = TRUE                  !  Start new number
        Decimal = False
        CYCLE                             !  Continue
      OF ?Clear                           ! For the ClearEntry/Clear key
        IF NewNumber THEN                 !  completed number entry
          Operation = ?Equal              !   so Clear current calculation
        END                               !  End IF
        Number = 0                        !  Clear number
        NewNumber = 0                     !  Start new number
        Decimal = False
      END                                 ! End CASE
      IF Operation <> ?Equal              ! Complete outstanding operations
        IF ACCEPTED() = ?Percent          !  For the percent key
          Number = Number * Operand / 100 ! Calculate % value
          IF  (Operation <> ?Add )     |  !  Check not adding
          AND (Operation <> ?Subtract )   !  or subtractiong percentage
            Operation = ?Equal            !   Finished operation
          END                             !  End IF
        END                               ! End IF
        CASE Operation                    !  Jump to saved operation key
        OF ?Add                           ! For Add key
          Number += Operand               !   Add number to operand
        OF ?Subtract                      !  For Subtract key
          Number = Operand - Number       !   Subtract number from operand
        OF ?Multiply                      !  For Multiply key
          Number *= Operand               !   Multiply operand by number
        OF ?Divide                        !  For Divide key
          IF Number <> 0 THEN             !  Check for divide by zero
            Number = Operand / Number     !   Divide operand by number
          END                             !  End IF
        OF ?Power                         !  For Raise to a Power key
          Number = Operand ^ Number       !   Raise operand to number power
        END                               !  End CASE
        Decimal = False
        Operation = ?Equal                !  Operation done
      END;                                ! End IF
      CASE ACCEPTED()                     ! Jump to the accepted field
      OF ?Sign                            ! For the Change Sign key
        Number *= -1                      !  Multiply by -1
      OF ?Square                          ! For the Square key
        Number *= Number                  !  Multilpy by itself
      OF ?Root                            ! For the Square Root key
        Number = SQRT(Number)             !  Find the square root
      OF ?TenTimes                        ! For the 10X key
        Number *= 10                      !  Multiply by 10
      OF ?Reciprical                      ! For the Reciprical key
        IF Number <> 0 THEN               ! Check for divide by zero
          Number = 1/Number               !  Find the reciprical
        END                               ! End IF
      OF ?ClearAll                        ! For clear all key
        Number = 0                        !  Set number to zero
        Memory = 0                        !  Set memory to zero
      OF ?MemClear                        ! For clear memory key
        Memory = 0                        !  Set memory to zero
      OF ?MemRecall                       ! For the Recall Memory key
        Number = Memory                   !  Set number to memory
      OF ?MemMinus                        ! For subtract from memory key
        Memory -= Number                  !  Subtract number from memory
      OF ?MemPlus                         ! For the Add to Memory key
        Memory += Number                  !  Add number to memory
      OF ?Add TO ?Power                   ! For two operand operation keys
        Operation = ACCEPTED()            !  Save the operator
        Operand = Number                  !  Save the first operand
      END                                 ! End CASE
      SELECT(?Zero)                       ! Set focus to the Zero key
      NewNumber = TRUE                    ! ready for next number
      Decimal = False
    END                                   !End CASE
  END                                   !End ACCEPT
  CLOSE(Calculator)                     !Close the calculater window
[END]
[END]
[PROCEDURE]
NAME DayofWeek
PROTOTYPE '(LONG pDate),STRING'
PARAMETERS '(LONG pDate) !,STRING'
[COMMON]
DESCRIPTION 'Return the day of the week'
FROM ABC Source
MODIFIED '2017/06/09' '22:52:10'
[DATA]
[SCREENCONTROLS]
! PROMPT('Return Value:'),USE(?ReturnValue:Prompt)
! ENTRY(@s20),USE(ReturnValue)
[REPORTCONTROLS]
! STRING(@s20),USE(ReturnValue)
ReturnValue              STRING(20)
!!> GUID('7d41e2ae-da55-4e7d-9787-b0504af32bf3'),PROMPT('Return Value:'),HEADER('Return Value'),PICTURE(@s20)
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 ReturnValue = ''

 IF pDate
    CASE pDate % 7
    OF 1
       ReturnValue = 'Monday'
    OF 2
       ReturnValue = 'Tuesday'
    OF 3
       ReturnValue = 'Wednesday'
    OF 4
       ReturnValue = 'Thursday'
    OF 5
       ReturnValue = 'Friday'
    OF 6
       ReturnValue = 'Saturday'
    ELSE
       ReturnValue = 'Sunday'
    END
 END

 RETURN ReturnValue
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================ 
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html) 
! 
!    This file is part of Devuna-CyberTools (https://github.com/Devuna/Devuna-CyberTools) 
! 
!    Devuna-CyberTools is free software: you can redistribute it and/or modify 
!    it under the terms of the GNU General Public License as published by 
!    the Free Software Foundation, either version 3 of the License, or 
!    (at your option) any later version. 
! 
!    Devuna-CyberTools is distributed in the hope that it will be useful, 
!    but WITHOUT ANY WARRANTY; without even the implied warranty of 
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
!    GNU General Public License for more details. 
! 
!    You should have received a copy of the GNU General Public License 
!    along with this file.  If not, see <http://www.gnu.org/licenses/>. 
! ================================================================================ 
!EndRegion Notices
[END]
[END]
[PROCEDURE]
NAME srcCalculateHolidays
PROTOTYPE '(HOLIDAY:QUEUETYPE HYQ, LONG pYear, STRING pProvince, STRING pCountry)'
PARAMETERS '(HOLIDAY:QUEUETYPE HYQ, LONG pYear, STRING pProvince, STRING pCountry)'
[COMMON]
DESCRIPTION 'SEE EXTENDED DESCRIPTION'
LONG 'Call this procedure as follows:<0DH,0AH,0DH,0AH>srcCalculateHolidays(HYQ,'
LONG 'Year,Province,Country)<0DH,0AH,0DH,0AH>Where :<0DH,0AH>HYQ - is a queue of the t'
LONG 'ype listed below<0DH,0AH>Year - is a long containing the year you w'
LONG 'ant holidays for in the format yyyy  (or unsigned) <0DH,0AH>Provinc'
LONG 'e - is the 2 character province code (if country is USA, the'
LONG 'n this field is irrelevant)<0DH,0AH>Country - country for which you'
LONG ' want the holidays (CAN or USA) - if USA, only federal holid'
LONG 'ays are calculated<0DH,0AH,0DH,0AH,0DH,0AH>Queue Type:<0DH,0AH,0DH,0AH>Holiday:QueueType    '
LONG 'QUEUE,TYPE<0DH,0AH>sName {28}STRING(60)<0DH,0AH>lDa'
LONG 'te {31}LONG<0DH,0AH> {21}'
LONG ' {15}END<0DH,0AH,0DH,0AH>Procedure Prototype<0DH,0AH>(Holiday:QueueTyp'
LONG 'e,long,string,string)'
FROM ABC Source
MODIFIED '2017/06/09' '22:58:23'
[DATA]
[SCREENCONTROLS]
! ENTRY(@n-14),USE(l:date)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:date)
l:date                   LONG
!!> GUID('9a59e764-b927-4caa-b8b0-cb79c68bb386'),PICTURE(@n-14)
[SCREENCONTROLS]
! PROMPT('l : Name:'),USE(?l:Name:Prompt)
! ENTRY(@s60),USE(l:Name)
[REPORTCONTROLS]
! STRING(@s60),USE(l:Name)
l:Name                   STRING(60)
!!> GUID('836ba5d7-b657-4d71-a637-58d82eceaadd'),PROMPT('l : Name:'),HEADER('l : Name'),PICTURE(@s60)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(Year)
[REPORTCONTROLS]
! STRING(@n-14),USE(Year)
Year                     LONG
!!> GUID('bd307f92-490c-4e62-9b2b-7dc13e222926'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(Q_ptr)
[REPORTCONTROLS]
! STRING(@n-14),USE(Q_ptr)
Q_ptr                    LONG
!!> GUID('284e7ac0-c00e-4800-ad20-2947fa2cb17e'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(r:yr)
[REPORTCONTROLS]
! STRING(@n-14),USE(r:yr)
r:yr                     LONG
!!> GUID('d7c0c103-3449-41e2-bc92-3ee5318bc221'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n10.2),USE(r:a)
[REPORTCONTROLS]
! STRING(@n10.2),USE(r:a)
r:a                      REAL
!!> GUID('6c3a3ad5-acd9-4c6b-a53c-d5f24b344f0d'),PICTURE(@n10.2)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(r:b)
[REPORTCONTROLS]
! STRING(@n-7),USE(r:b)
r:b                      SHORT
!!> GUID('66cc84bc-30f5-443c-ac0a-a274f3c5bf13'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n10.2),USE(r:c)
[REPORTCONTROLS]
! STRING(@n10.2),USE(r:c)
r:c                      REAL
!!> GUID('b4422398-7746-4dec-8246-3846e8fa30b0'),PICTURE(@n10.2)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(r:d)
[REPORTCONTROLS]
! STRING(@n-7),USE(r:d)
r:d                      SHORT
!!> GUID('89b83c5f-930a-4cbc-aa8b-c7750a8645d9'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n10.2),USE(r:e)
[REPORTCONTROLS]
! STRING(@n10.2),USE(r:e)
r:e                      REAL
!!> GUID('db7fd513-f53a-44af-a8ba-a7fd49cf83c0'),PICTURE(@n10.2)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(r:f)
[REPORTCONTROLS]
! STRING(@n-7),USE(r:f)
r:f                      SHORT
!!> GUID('647c7066-71ec-4e3b-8c0b-661cce54d5e1'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(r:g)
[REPORTCONTROLS]
! STRING(@n-7),USE(r:g)
r:g                      SHORT
!!> GUID('6552739f-76c5-40bf-bb83-9bf145443c01'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n10.2),USE(r:h)
[REPORTCONTROLS]
! STRING(@n10.2),USE(r:h)
r:h                      REAL
!!> GUID('dad5b2c8-a125-48f1-b484-2f50aba52a3a'),PICTURE(@n10.2)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(r:i)
[REPORTCONTROLS]
! STRING(@n-7),USE(r:i)
r:i                      SHORT
!!> GUID('c5ff23d0-1ffd-4da4-ac6a-25b6fe60642a'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n10.2),USE(r:k)
[REPORTCONTROLS]
! STRING(@n10.2),USE(r:k)
r:k                      REAL
!!> GUID('2c220433-163b-4af9-99fd-d05fff405ba6'),PICTURE(@n10.2)
[SCREENCONTROLS]
! ENTRY(@n10.2),USE(r:l)
[REPORTCONTROLS]
! STRING(@n10.2),USE(r:l)
r:l                      REAL
!!> GUID('d1856ba8-c15f-4195-b26e-d613db727338'),PICTURE(@n10.2)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(r:m)
[REPORTCONTROLS]
! STRING(@n-7),USE(r:m)
r:m                      SHORT
!!> GUID('c85a1624-a083-492b-b793-b4f7ffae3010'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(r:n)
[REPORTCONTROLS]
! STRING(@n-14),USE(r:n)
r:n                      LONG
!!> GUID('32188ac4-98e6-498d-9c0c-1a1de1f0735e'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(r:p)
[REPORTCONTROLS]
! STRING(@n-14),USE(r:p)
r:p                      LONG
!!> GUID('516e9ca0-820e-42e8-8c6c-a5cb90ff2bda'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(l:lYear)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lYear)
l:lYear                  LONG
!!> GUID('024f42ec-4b57-44e9-bdd7-ad3b2acb0186'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@s2),USE(l:sProvince)
[REPORTCONTROLS]
! STRING(@s2),USE(l:sProvince)
l:sProvince              STRING(2)
!!> GUID('54ab4f31-e46e-4984-a212-3c392480b655'),PICTURE(@s2)
[SCREENCONTROLS]
! ENTRY(@s3),USE(l:sCountry)
[REPORTCONTROLS]
! STRING(@s3),USE(l:sCountry)
l:sCountry               STRING(3)
!!> GUID('7eeb279e-7710-4f6a-91d2-bd6ed6a5482f'),PICTURE(@s3)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(loc:Thanksgiving)
[REPORTCONTROLS]
! STRING(@n-14),USE(loc:Thanksgiving)
loc:Thanksgiving         LONG
!!> GUID('da533393-0bec-4ed7-8966-f7c3954cd6a3'),PICTURE(@n-14)
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 l:lYear            = pYear
 r:yr               = pYear
 l:sProvince        = pProvince
 l:sCountry         = pCountry
 loc:Thanksgiving   = 0
 clear(l:Name)

 if ~l:sCountry
    l:sCountry = 'CAN'
 end
 if l:sCountry = 'CAN'
    if ~l:sProvince
       l:sProvince = 'ON'
    end
 end
 if ~l:lYear
    l:lYear = year(today())
 end

 free(HYQ)

 case clip(upper(l:sCountry))
 of 'CAN'
    do Canada
 of 'USA'
    do USA
 end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
AddToQ     routine
 clear(HYQ)
 HYQ:lDate  = l:date
 get(HYQ,+HYQ:lDate)
 if errorcode()
    HYQ:sName = l:Name
    HYQ:lDate = l:date
    add(HYQ,+HYQ:lDate)
 end
 clear(l:Name)
!------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
FederalHolidaysCAN       routine
 do Easter
 do NewYearsDay
 do LabourDay
 do RemembranceDay
 do XmasDay
 do BoxingDay

!Victoria Day - May 24th weekend
!--------------------
 if clip(upper(l:sProvince)) <> 'NT'
    l:date = date(5,24,r:yr)
    loop
       if l:date % 7 = 1                   !if a Monday
          l:Name = 'VICTORIA DAY'
          do AddToQ
          break
       end
       l:date -= 1
    end
 end

!Canada Day
!--------------------
 l:date = date(7,1,r:yr)

 omit('***')
 if l:date % 7 = 6                      !if July 1st is a Saturday
    l:date += 2                         !Monday becomes a holiday
 end
 !***

 l:Name = 'CANADA DAY'
 do AddToQ

!Calculate August Civic Holiday - 1st Monday
!------------------
 if clip(upper(l:sProvince)) <> 'QC'
    l:date = date(8,1,r:yr)
    loop
       if l:date % 7 = 1                   !if a Monday

          case clip(upper(l:sProvince))
          of 'BC'
             l:Name = 'BRITISH COLUMBIA DAY'
          of 'NB'
             l:Name = 'NEW BRUNSWICK DAY'
          of 'SK'
             l:Name = 'SASKATCHEWAN DAY'
          else
             l:Name = 'AUGUST 1ST CIVIC HOLIDAY'
          end
          do AddToQ

          break
       end
       l:date += 1
    end
 end

!Calculate Thanksgiving Monday
!------------------------------
 l:date = date(10,1,r:yr)
 loop
    if l:date % 7 = 1
       l:date += 7
       l:Name = 'THANKSGIVING MONDAY'
       do AddToQ

       break
    end
    l:date += 1
 end

!Fixed Public Holidays
 
!January 1st - New Year's Day                       - see Note 1
!The Monday on or preceding 24 May Victoria Day
!July 1st - Canada Day                              - see Note 1
!1st Monday in August Civic or Provincial Holidays  - see Note 2
!1st Monday in September Labour Day
!2nd Monday in October Thanksgiving Day
!November 11th - Remembrance Day                    - see Note 3
!December 25th - Christmas Day                      - see Note 1
!December 26th - Boxing Day                         - see Note 1

!Note 1
!When these days fall on a Sunday, the next working day is considered a holiday.
!If Canada Day falls on a Saturday, the Monday following is a holiday.

!Note 2
!See below, under "provincial holidays" below the moveable holidays.
!This is the date taken unless another civil or provincial holiday exists on
!a different date, in which case the local holiday is used.

!There are numerous references, mainly in provincial government documents,
!to closures during the period from Christmas Eve to New Year's Day inclusive.
!Visitors should not expect to find offices open during this period.

!Note 3
!Officially Government offices and banks only,
!though in practice many other businesses may close.

!ONTARIO HOLIDAYS
!Statutory holidays are as the Federal ones.
!There are civic holidays on the 1st Monday in August (Simcoe Day)) and on 11 November.
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
FederalHolidaysUSA         routine
!New Year's Day                         - January 1st
!Inauguration Day                       - 20 January of each 4th year starting from 1965
!Martin Luther King Jr Day              - 3rd Monday in January
!Presidents' Day/Washington's Birthday  - 3rd Monday in February
!Memorial Day                           - Last Monday in May
!Flag Day                               - 14 June
!Independence Day                       - 4 July
!Labor Day                              - 1st Monday in September
!Columbus Day                           - 2nd Monday in October
!Veterans' Day                          - 11 November
!Thanksgiving                           - 4th Thursday in November
!Christmas Day                          - 25 December 

 do NewYearsDay
 do LabourDay
 do RemembranceDay
 do XmasDay
 do BoxingDay

 if (l:lYear - date(1,1,1965)) % 4 = 0   !Inauguration Day
    l:date = date(1,20,r:yr)

    omit('***')
    if l:date % 7 = 6           !if it falls on a Saturday
       l:date -= 1              ! move it to Friday
    end
    if l:date % 7 = 0           !if it falls on a Sunday
       l:date += 1
    end                         ! move it to Monday
    !***

    l:Name = 'INAUGURATION DAY'
    do AddToQ
 end
!------------
 l:date = date(1,1,r:yr)               !Martin Luther King Jr Day
 loop
    if l:date % 7 = 1                  !if a Monday
       l:date += 14                    !add 2 weeks

       l:Name = 'MARTIN LUTHER KING JR. DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!------------
 l:date = date(2,1,r:yr)               !Presidents' Day/Washington's Birthday
 loop
    if l:date % 7 = 1                  !if a Monday
       l:date += 14                    !add 2 weeks

       l:Name = 'PRESIDENTS'' DAY / WASHINGTON''S BIRTHDAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!------------
 l:date = date(5,31,r:yr)               !Memorial Day
 loop
    if l:date % 7 = 1                   !if a Monday

       l:Name = 'MEMORIAL DAY'
       do AddToQ

       break
    end
    l:date -= 1
 end
!------------
 l:date = date(6,14,r:yr)                !Flag Day

 omit('***')
 if l:date % 7 = 6           !if it falls on a Saturday
    l:date -= 1              ! move it to Friday
 end
 if l:date % 7 = 0           !if it falls on a Sunday
    l:date += 1
 end                         ! move it to Monday'
 !***

 l:Name = 'FLAG DAY'
 do AddToQ
!------------
 l:date = date(7,4,r:yr)                !Independence Day

 omit('***')
 if l:date % 7 = 6           !if it falls on a Saturday
    l:date -= 1              ! move it to Friday
 end
 if l:date % 7 = 0           !if it falls on a Sunday
    l:date += 1
 end                         ! move it to Monday
 !***

 l:Name = 'INDEPENDENCE DAY'
 do AddToQ
!------------
 l:date = date(10,1,r:yr)               !Columbus Day
 loop
    if l:date % 7 = 1                  !if a Monday
       l:date += 7                    !add 1 week

       l:Name = 'COLUMBUS DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!-------------
 l:date = date(11,1,r:yr)               !Thanksgiving Day
 loop
    if l:date % 7 = 4                   !if a Thursday
       l:date += 21                      !add 3 weeks

       l:Name = 'THANKSGIVING DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!------------------------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
BoxingDay       routine
 l:date = date(12,26,r:yr)

 omit('***')
 if l:date % 7 = 6                      !if Dec 26 is a Saturday
    l:date += 2                         !Monday becomes a holiday
 end
 if l:date % 7 = 0                      !if Dec 26 is a Sunday
    l:date += 1                         !Monday becomes a holiday
 end
 !***

 l:Name = 'BOXING DAY'
 do AddToQ
!----------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ColumbusDay     routine
 l:date = date(10,1,r:yr)           !Columbus Day
 loop
    if l:date % 7 = 1               !if a Monday
       l:date += 7                  !add a week

       l:Name = 'COLUMBUS DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!--------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ConfederateMemorialDay      routine
 l:date = date(4,30,r:yr)               !Confederate Memorial Day
 loop
    if l:date % 7 = 1                  !if a Monday

       l:Name = 'CONFEDERATE MEMORIAL DAY'
       do AddToQ

       break
    end
    l:date -= 1
 end
!---------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Easter      routine
 r:a    = r:yr % 19
 r:b    = r:yr / 100
 r:c    = r:yr % 100
 r:d    = r:b  / 4
 r:e    = r:b  % 4
 r:f    = (r:b + 8) / 25
 r:g    = (r:b - r:f + 1) / 3
 r:h    = ((19 * r:a) + r:b - r:d - r:g + 15) % 30
 r:i    = r:c / 4
 r:k    = r:c % 4
 r:l    = (32 + (2 * r:e) + (2 * r:i) - r:h - r:k) % 7
 r:m    = (r:a + (11 * r:h) + (22 * r:l)) / 451
 r:n    = (r:h + r:l - (7 * r:m) + 114) / 31
 r:p    = (r:h + r:l - (7 * r:m) + 114) % 31
 r:p   += 1

 l:date   = date(r:n,r:p-2,r:yr)
 l:Name = 'GOOD FRIDAY'
 do AddToQ

 l:date   = date(r:n,r:p,r:yr)
 l:Name = 'EASTER SUNDAY'
 do AddToQ

 l:date   = date(r:n,r:p+1,r:yr)
 l:Name = 'EASTER MONDAY'
 do AddToQ
!-------------------------------

!The following is an algorithm by which the date of Easter may be calculated.
!
!   Divide                      by       Quotient     Remainder
!
!the year x                     19          -             a
!the year x                    100          b             c
!b                               4          d             e
!b + 8                          25          f             -
!b - f + 1                       3          g             -
!19*a + b - d - g + 15          30          -             h
!c                               4          i             k
!32 + 2*e + 2*i - h - k          7          -             L
!a + 11*h + 22*L               451          m             -
!h + L - 7*m + 114              31          n             p
!
!Then n is the number of the month (3 = March; 4 = April) and p + 1 is the day of that
!month upon which Easter Sunday falls. The symbol * means the product of the two numbers.

!For those interested, the following table lists the date of Easter Sunday up to the year 2010.

!      March 31, 2002        April 20, 2003       April 11, 2004
!      March 27, 2005        April 16, 2006       April 08, 2007
!      March 23, 2008        April 12, 2009       April 04, 2010

!                1997    1998    1999    2000    2001    2002    2003    2004
!Good Friday    28 Mar  10 Apr  2 Apr   21 Apr  13 Apr  29 Mar  18 Apr  9 Apr
!Easter         30 Mar  12 Apr  4 Apr   23 Apr  15 Apr  31 Mar  20 Apr  11 Apr
!Easter Monday  31 Mar  13 Apr  5 Apr   24 Apr  16 Apr  1 Apr   21 Apr  12 Apr
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
LabourDay       routine
 l:date = date(9,1,r:yr)
 loop
    if l:date % 7 = 1

       case clip(upper(l:sCountry))
       of 'CAN'
          l:Name = 'LABOUR DAY'
       of 'USA'
          l:Name = 'LABOR DAY'
       end

       do AddToQ

       break
    end
    l:date += 1
 end
!-------------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
LincolnsBirthday        routine
 l:date = date(2,12,r:yr)            !Lincoln's Birthday
 if l:date % 7 = 6                   !if a Saturday
    l:date -= 1                      !set to Friday
 end
 if l:date % 7 = 0                   !if a Sunday
    l:date += 1                      !set to Monday
 end

 l:Name = 'LINCOLN''s BIRTHDAY'
 do AddToQ
!--------------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
MayElectionDay      routine
 l:date = date(5,2,r:yr)              !Tuesday on or after 2 May Primary Election Day
 if l:date % 2 = 0                     !if an even year
    loop
       if l:date % 7 = 2                  !if a Tuesday

          l:Name = 'MAY PRIMARY ELECTION DAY'
          do AddToQ

          break
       end
       l:date += 1
    end
 end
!---------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
NativeDay       routine
 l:date = date(10,1,r:yr)              !Tuesday on or after 2 May Primary Election Day
 loop
    if l:date % 7 = 1                  !if a Monday
       l:date += 1                     !add a week

       l:Name = 'NATIVE AMERICAN DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!---------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
NewYearsDay     routine
 l:date = date(1,1,r:yr)

 omit('***')
 if l:date % 7 = 0                      !if Jan 1 is a Sunday
    l:date += 1                         !Monday becomes a holiday
 end
 !***

 l:Name = 'NEW YEAR''S DAY'
 do AddToQ
!--------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
NovElectionDay      routine
 l:date = date(11,2,r:yr)              !November Election Day
 if l:date % 2 = 0                     !if an even year
    loop
       if l:date % 7 = 2                  !if a Tuesday

          l:Name = 'NOVEMBER ELECTION DAY'
          do AddToQ

          break
       end
       l:date += 1
    end
 end
!---------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
PatriotsDay     routine
 l:date = date(4,1,r:yr)           !Patriot's Day
 loop
    if l:date % 7 = 1               !if a Monday
       l:date += 14                 !add 2 weeks

       l:Name = 'PATRIOT''s DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!-----------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
RemembranceDay      routine
 l:Date    = date(11,11,r:yr)

 omit('***')
 if l:date % 7 = 6                   !if it falls on a Saturday
    l:date -= 1                      ! move it to Friday
 end
 if l:date % 7 = 0                   !if it falls on a Sunday
    l:date += 1
 end                                 ! move it to Monday
 !***

 case clip(upper(l:sCountry))
 of 'CAN'
    l:Name = 'REMEMBRANCE DAY HOLIDAY'
 of 'USA'
    l:Name = 'VETERAN''S DAY HOLIDAY'
 end

 do AddToQ
!-----------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
SecondThanksgiving      routine
 l:Date   = loc:Thanksgiving + 1
 l:Name = 'SECOND DAY OF THANKSGIVING'
 do AddToQ
!---------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
XmasDay     routine
 l:date = date(12,25,r:yr)

 omit('***')
 if l:date % 7 = 6                   !if it falls on a Saturday
    l:date -= 1                      ! move it to Friday
 end
 if l:date % 7 = 0                   !if it falls on a Sunday
    l:date += 1
 end                                 ! move it to Monday
 !***

 l:Name = 'CHRISTMAS HOLIDAY'
 do AddToQ
!----------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
XmasEveDay      routine
 l:date = date(12,24,r:yr)               !Christmas Eve Day
 l:Name = 'CHRISTMAS EVE DAY'
 do AddToQ
!---------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Canada      routine
 do FederalHolidaysCAN

 case clip(upper(l:sProvince))
 of 'AB'
    do AB
 of 'BC'
    !do BC
    !BC      routine         !BRITISH COLUMBIA
    !The Government of British Columbia lists the Canadian public holidays
    !given above as statutory holidays except Easter Sunday, Easter Monday
    !and Boxing Day which are not holidays. They add British Columbia Day
    !which is the 1st Monday in August, co-inciding with the general date
    !for provincial and civic holidays. Remembrance Day (11 November) is a statutory holiday for all.

 of 'MB'
    !do MB
    !MB     routine          !MANITOBA
    !Same as federal

 of 'NB'
    !do NB
    !NB      routine         !NEW BRUNSWICK
    !The Government of New Brunswick lists New Year's Day, Good Friday, Canada Day,
    !New Brunswick Day (the 1st Monday in August, co-inciding with the general date
    !for provincial and civic holidays), Labour Day and Christmas Day as paid holidays.

 of 'NF'
    do NF
 of 'NT'
    do NT
 of 'NS'
    do NS
 of 'NU'
    do NU
 of 'ON'
    !do ON
    !ON      routine         !ONTARIO
    !Statutory holidays are as the Federal ones.
    !There are civic holidays on the 1st Monday in August (Simcoe Day)) and on 11 November.

 of 'PE'
    !do PE
    !PE       routine        !PRINCE EDWARD ISLAND
    !Statutory holidays are as the Federal ones. The 1st Monday in August is not an official
    !holiday but is often given by employers

 of 'QC'
    do QC
 of 'SK'
    !do SK
    !SK       routine        !SASKATCHEWAN
    !Saskatchewan day is the 1st Monday in August, in line with the Civic holiday.

 of 'YT'
    do YT
 end
!****************************************************************************
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
AB      routine         !ALBERTA
!The same as the federal holidays plus Alberta Family Day
!on the 3rd Monday in February (government and most offices
!close but many stores stay open) and an optional civic holiday on the 1st Monday in August

 l:date = date(2,1,r:yr)        !Alberta Family Day
 loop
    if l:date % 7 = 1           !if a Monday

       l:date += 14
       l:Name = 'ALBERTA FAMILY DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!****************************************************************************
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
NF      routine         !NEWFOUNDLAND AND LABRADOR
!The Provincial holiday is Cabot 500 Day (Discovery Day) on June 24.

!In St John's and Harbour Grace, the Regatta Days are also holidays.
!St. John's falls on the first Wednesday in August, weather permitting,
!but the Harbour Grace regatta date is unknown.
!Remembrance Day - Nov 11 - Civic Holiday

 l:Date   = date(6,24,r:yr)
 l:Name = 'CABOT 500 DAY'
 do AddToQ
!----------
 l:date = date(8,1,r:yr)        !Regatta Day
 loop
    if l:date % 7 = 3           !if a Wednesday

       l:Name = 'ST. JOHN''S REGATTA DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!---------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
NT      routine         !NORTHWEST TERRITORIES
!The Government of Nunavutthe Northwest Territories Labour Standards Acts
!and Amendments list the following:-

!Victoria Day is not listed.
!A Civic Holiday is granted on the 1st Monday in August.
!A day is to be fixed by the Governor for observance of the birthday of the reigning sovereign.
!This was Friday 9 July in 1999 and, since the usual date is the 2nd Saturday in July, it is presumed,
!though withouth official confirmation so far, that the date will be the Friday before the 2nd Saturday in June.
!Remembrance Day (11 November) is a general holiday (i.e. for all, not just government workers).

 l:date = date(6,1,r:yr)        !REIGNING SOVEREIGN'S BIRTHDAY
 loop
    if l:date % 7 = 6           !if a Saturday

       l:date += 6
       l:Name = 'REIGNING SOVEREIGN''S BIRTHDAY'
       do AddToQ

       break
    end
    l:date += 1
 end

!****************************************************************************
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
NU      routine         !NUNAVUT
!The Government of Nunavut lists exactly the same laws as those of the Northwest Territories

 do NT   !do Nortwest Territories calcs
!****************************************************************************
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
NS      routine         !NOVA SCOTIA
!The Government of Nova Scotia lists the same official holidays as the Canadian Government except
!the Provincial holiday and adds

!24 December Christmas Eve (1/2 Day)

!They do not list a provincial holiday but state that "an additional holiday will be taken on a day that,
!in the opinion of the Department of Human Resources is recognized as a Provincial or Civil Holiday in an
!area in which the employee is employed (for example, in Halifax and Dartmouth, Halifax and Dartmouth Natal Day).
!If there is no such recognized holiday in the area, the holiday will be taken on the first Monday in August".
!Both the Halifax and Dartmouth Natal Days fall on the 1st Monday in August.

 l:date = date(12,24,r:yr)         !Xmas Eve Day
 l:Name = 'CHRISTMAS EVE DAY'
 do AddToQ
!--------------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
QC       routine        !QUEBEC
!The government of Quebec lists the same official holidays as the Canadian Government and
!adds the second day of the New Year (January 2) and Boxing Day (26 December).
!The provincial holiday however, is not in August, but 24 June Quebec National Day or St Jean Baptiste Day

 l:date = date(1,2,r:yr)            !Day After New Year's Day
 l:Name = 'JANUARY 2nd'
 do AddToQ
!------------
 l:date = date(6,24,r:yr)            !Quebec National Day
 l:Name = 'QUEBEC NATIONAL DAY'
 do AddToQ
!--------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
YT       routine        !YUKON
!In addition to Federal holidays, there are Provincial holidays (replacing the 1st Monday in August)
!Heritage Day  - Friday before the last Sunday in February
!Discovery Day - Monday nearest 17 August
 data
r:mod      byte
 code
 l:date = date(2,28,r:yr)
 if l:lYear % 4 = 0      !if a leap year
    l:date += 1          
 end

 loop                                   !Heritage Day
    if l:date % 7 = 0                   !if a Sunday
       l:date -= 2                      ! subtract 2 days

       l:Name = 'HERITAGE DAY'
       do AddToQ

       break
    end
    l:date -= 1
 end
!---------------
 l:date = date(8,17,r:yr)

 r:mod = l:date % 7                  !Discovery Day
 case r:mod                          !set l:date to closest Monday to Aug 17
 of 0                     !Sun
    l:date += 1
 of 1                     !Mon
 of 2                     !Tue
    l:date -= 1
 of 3                     !Wed
    l:date -= 2
 of 4                     !Thur
    l:date -= 3
 of 5                     !Fri
    l:date += 3
 of 6                     !Sat
    l:date += 2
 end

 l:Name = 'DISCOVERY DAY'
 do AddToQ
!----------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
USA     routine
 do FederalHolidaysUSA

 case clip(upper(l:sProvince))
 of 'AL'    !Alabama
    do Alabama
 of 'AK'
    do Alaska
 of 'AZ'
    do Arizona
 of 'AR'
    do XmasEveDay           !24 December Christmas Eve Day
 of 'CA'
    do California
 of 'CO'                    !Colorado - Same as Federal
 of 'CT'
    do LincolnsBirthday     !12 February Lincoln's Birthday
 of 'DE'
    do Delaware
 of 'DC'                    !District Of Columbia - Same as Federal
 of 'FL'
    do Florida
 of 'GA'
    do Georgia
 of 'HI'
    do Hawaii
 of 'ID'                    !Idaho - Same as Federal
 of 'IN'                    !Indiana
    do LincolnsBirthday     !12 February Lincoln Day
    do MayElectionDay       !Tuesday on or after 2 May Primary Election Day
    do NovElectionDay       !Tuesday on or after 2 November Election Day
    do XmasEveDay           !24 December Christmas Eve

 of 'IL'
    do Illinois
 of 'IA'                    !Iowa
    do SecondThanksgiving   !The Friday after Thanksgiving 2nd Day of Thanksgiving
    do LincolnsBirthday     !12 February Lincoln's Birthday

 of 'KS'                    !Kansas
    do LincolnsBirthday     !12 February Lincoln's Birthday

 of 'KY'                    !Kentucky
    do XmasEveDay           !24 December Christmas Eve

 of 'LA'                    !Louisiana
    do NovElectionDay       !Tuesday on or after 2 November Election Day

 of 'ME'                    !Maine
    do PatriotsDay          !3rd Monday in April Patriot's Day

 of 'MD'
    do Maryland
 of 'MA'
    do Massachusetts
 of 'MI'                    !Michigan
    do LincolnsBirthday     !12 February Lincoln's Birthday
    do XmasEveDay           !24 December Christmas Eve

 of 'MN'                    !Minnesota
    do SecondThanksgiving   !Friday after Thanksgiving Holiday

 of 'MS'                    !Mississippi
    do ConfederateMemorialDay  !Last Monday in April Confederate Memorial Day

 of 'MO'
    do Missouri
 of 'MT'                    !Montana
    do NovElectionDay       !Tuesday on or after 2 November Election Day

 of 'NE'
    do Nebraska
 of 'NH'                    !NewHampshire
    do NovElectionDay       !Tuesday on or after 2 November Election Day

 of 'NJ'
    do NewJersey
 of 'NM'                    !NewMexico
    do SecondThanksgiving   !Day after Thanksgiving Holiday for State Employees in lieu of President's Day

 of 'NY'                    !New York
    do LincolnsBirthday     !12 February Lincoln's Birthday1
    do NovElectionDay       !Tuesday on or after 2 November Election Day

 of 'NC'                    !NorthCarolina
    do XmasEveDay           !24 December Christmas Eve
    do BoxingDay            !26 December Boxing Day

 of 'ND'                    !North Dakota - Same as Federal
 of 'OH'                    !Ohio - Same as Federal
 of 'OK'                    !Oklahoma - Same as Federal
 of 'OR'                    !Oregon - Same as Federal
 of 'PA'                    !Pennsylvania
    do LincolnsBirthday     !12 February Lincoln's Birthday

 of 'SC'                    !South Carolina
    do ColumbusDay          !Columbus Day
    do NovElectionDay       !Tuesday on or after 2 November Election Day
    do BoxingDay            !26 December Boxing Day

 of 'SD'                    !South Dakota
    do NativeDay            !2nd Monday in October Native American Day
 

 of 'TN'                    !Tennessee
    do ColumbusDay          !Columbus Day
    do NovElectionDay       !Tuesday on or after 2 November Election Day

 of 'TX'                    !Texas
    do Texas

 of 'UT'                    !Utah
    do Utah

 of 'VT'                    !Vermont
    do Vermont

 of 'VA'                    !Virginia
    do Virginia

 of 'WA'                    !Washington
    do LincolnsBirthday     !12 February Lincoln's Birthday
    do ColumbusDay          !Columbus Day

 of 'WV'                    !WestVirginia
    do WestVirginia

 of 'WI'                    !Wisconsin - Same as Federal
 of 'WY'                    !Wyoming
    do NativeDay
 end
!--------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Alabama     routine
!Last Monday in April Confederate Memorial Day
!1st Monday in June Jefferson Davis's Birthday

 do ConfederateMemorialDay

 l:date = date(6,1,r:yr)               !Jefferson Davis's Birthday
 loop
    if l:date % 7 = 1                  !if a Monday

       l:Name = 'JEFFERSON DAVIS''s BIRTHDAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!---------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Alaska     routine
!Last Monday in March Seward's Day
!18 October Alaska Day

 l:date = date(3,31,r:yr)               !Seward's Day
 loop
    if l:date % 7 = 1                  !if a Monday

       l:Name = 'SEWARD''s DAY'
       do AddToQ

       break
    end
    l:date -= 1
 end
!-----------------
 l:date = date(10,18,r:yr)           !Alaska Day
 if l:date % 7 = 6                   !if a Saturday
    l:date -= 1                      !set to Friday
 end
 if l:date % 7 = 0                   !if a Sunday
    l:date += 1                      !set to Monday
 end

 l:Name = 'ALASKA DAY'
 do AddToQ
!---------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Arizona     routine
!The following are listed in the Arizona Code as holidays but invariably fall on a Sunday
!and are not moved to another day. They therefore only affect those who might normally work on a Sunday:
!2nd Sunday in May Mothers' Day
!3rd Sunday in June Fathers' Day
!1st Sunday in August American Family Day
!Sunday on or before 17 September Constitution Commemoration Day

 l:date = date(5,1,r:yr)               !Mothers' Day
 loop
    if l:date % 7 = 0                  !if a Sunday
       l:date += 7                     !add a week

       l:Name = 'MOTHERS'' DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!---------
 l:date = date(6,1,r:yr)               !Fathers' Day
 loop
    if l:date % 7 = 0                  !if a Sunday
       l:date += 14                     !add 2 weeks

       l:Name = 'FATHERS'' DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!----------
 l:date = date(8,1,r:yr)               !American Family Day
 loop
    if l:date % 7 = 0                  !if a Sunday

       l:Name = 'AMERICAN FAMILY DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!---------
 l:date = date(9,17,r:yr)               !Constitution Commemoration Day
 loop
    if l:date % 7 = 0                  !if a Sunday

       l:Name = 'CONSTITUTION COMMEMORATION DAY'
       do AddToQ

       break
    end
    l:date -= 1
 end
!---------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
California     routine
!12 February Lincoln's Birthday
!31 March César Chávez Day1
!9 September Admission Day
!Friday after Thanksgiving Holiday

 do LincolnsBirthday
 do SecondThanksgiving

 l:date = date(3,31,r:yr)            !César Chávez Day
 if l:date % 7 = 6                   !if a Saturday
    l:date -= 1                      !set to Friday
 end
 if l:date % 7 = 0                   !if a Sunday
    l:date += 1                      !set to Monday
 end

 l:Name = 'CéSAR CHáVEZ DAY'
 do AddToQ
!------------
 l:date = date(9,9,r:yr)            !Admission Day
 if l:date % 7 = 6                   !if a Saturday
    l:date -= 1                      !set to Friday
 end
 if l:date % 7 = 0                   !if a Sunday
    l:date += 1                      !set to Monday
 end

 l:Name = 'ADMISSION DAY'
 do AddToQ
!---------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Delaware        routine
!Tuesday on or after 2 November Election Day (even years only)
!Friday after Thanksgiving 2nd Day of Thanksgiving

!Holidays given above are according to the State Code,
!but several reliable sources add the following, which are not in the code:
!Last Monday in May Memorial Day (already added in Federal holidays)
!24 December Christmas Eve

 do SecondThanksgiving
 do XmasEveDay
 do NovElectionDay
!---------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Florida     routine
!Friday after Thanksgiving 2nd Day of Thanksgiving
!24 December Christmas Eve

!Apart from the above, the following are listed as legal holidays:-
!19 January Birthday of Robert E Lee
!12 February Lincoln's Birthday
!15 February Birthday of Susan B Anthony
!2 April Pascua Florida Day
!26 April Confederate Memorial Day
!3 June Birthday of Jefferson Davis
!14 June Flag Day  (done in Federal holidays)
!2nd Monday in October Farmers' Day
!Tuesday on or after 2 November Election Day (in even years only)
!and the following alternative date is given:-
!15 January Birthday of Dr Martin Luther King Jr.

 do SecondThanksgiving
 do XmasEveDay
 do LincolnsBirthday
 do NovElectionDay

 l:date = date(1,19,r:yr)           !Robert E Lee's Birthday
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1
 end

 l:Name = 'ROBERT E LEE''s BIRTHDAY'
 do AddToQ
!--------------
 l:date = date(2,15,r:yr)           !Susan B Anthony's Birthday
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1
 end

 l:Name = 'SUSAN B ANTHONY''s BIRTHDAY'
 do AddToQ
!-----------------
 l:date = date(4,2,r:yr)           !Pascua Florida Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1
 end

 l:Name = 'PASCUA FLORIDA DAY'
 do AddToQ
!-----------------
 l:date = date(4,26,r:yr)           !Confederate Memorial Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1
 end

 l:Name = 'CONFEDERATE MEMORIAL DAY'
 do AddToQ
!--------------
 l:date = date(6,3,r:yr)            !Jefferson Davis's Birthday
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1
 end

 l:Name = 'JEFFERSON DAVIS''s BIRTHDAY'
 do AddToQ
!-------------------
 l:date = date(10,1,r:yr)            !2nd Monday in October Farmers' Day

 loop
    if l:date % 7 = 1               !if a Monday
       l:date += 7                  !add a week

       l:Name = 'FARMERS'' DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!-------------------
 l:date = date(1,15,r:yr)           !15 January Birthday of Dr Martin Luther King Jr.
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1
 end

 l:Name = 'MARTIN LUTHER KING JR''s BIRTHDAY'
 do AddToQ
!-------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Georgia         routine
!Last Monday in April Confederate Memorial Day
!Friday after Thanksgiving Thanksgiving Holiday
!24 December Christmas Eve

 do SecondThanksgiving
 do XmasEveDay

 l:date = date(4,30,r:yr)           !Confederate Memorial Day

 loop
    if l:date % 7 = 1               !if a Monday
       l:date += 7                  !add a week

       l:Name = 'CONFEDERATE MEMORIAL DAY'
       do AddToQ

       break
    end
    l:date -= 1
 end
!-------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Hawaii      routine
!26 March Prince Jonah Kuhio Kalanianaole Day
!11 June King Kamehameha Day
!3rd Friday in August Admission Day
!Tuesday on or after 2 November Election Day

 do NovElectionDay

 l:date = date(3,26,r:yr)           !Prince Jonah Kuhio Kalanianaole Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'PRINCE JONAH KUHIO KALANIANAOLE DAY'
 do AddToQ
!--------------
 l:date = date(6,11,r:yr)           !11 June King Kamehameha Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'KING KAMEHAMEHA DAY'
 do AddToQ
!--------------
 l:date = date(8,1,r:yr)           !Admission Day
 loop
    if l:date % 7 = 5               !if a Friday
       l:date += 14                  !add 2 weeks

       l:Name = 'ADMISSION DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!-----------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Illinois        routine
!12 February Lincoln's Birthday
!1st Monday in March Casimir Pulaski's Birthday
!Tuesday on or after 2 November Election Day1

 do NovElectionDay
 do LincolnsBirthday

 l:date = date(3,1,r:yr)           !Casimir Pulaski's Birthday
 loop
    if l:date % 7 = 1               !if a Monday

       l:Name = 'CASIMIR PULASKI''s BIRTHDAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!-----------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Maryland        routine
!12 February Lincoln's Birthday
!25 March Maryland Day
!12 September Defenders Day
!Tuesday on or after 2 November Election Day
!Friday after Thanksgiving Thanksgiving Holiday

 do LincolnsBirthday
 do NovElectionDay
 do SecondThanksgiving

 l:date = date(3,25,r:yr)           !Maryland Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'MARYLAND DAY'
 do AddToQ
!--------------
 l:date = date(9,12,r:yr)           !Defenders Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'DEFENDERS'' DAY'
 do AddToQ
!------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Massachusetts       routine
!17 March Evacuation Day in Suffolk county only
!3rd Monday in April Patriots Day
!17 June Bunker Hill Day in Suffolk county only

 do PatriotsDay

 l:date = date(3,17,r:yr)           !Evacuation Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'EVACUATION DAY'
 do AddToQ
!--------------
 l:date = date(6,17,r:yr)           !Bunker Hill Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'BUNKER HILL DAY'
 do AddToQ
!------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Missouri        routine
!12 February Lincoln's Birthday
!8 May Truman Day

 do LincolnsBirthday

 l:date = date(5,8,r:yr)           !Truman Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'TRUMAN DAY'
 do AddToQ
!------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Nebraska        routine
!Last Friday in April Arbor Day
!Friday following Thanksgiving 2nd Day (State and local govt. offices closed)

 do SecondThanksgiving

 l:date = date(4,30,r:yr)           !Arbor Day
 loop
    if l:date % 7 = 5               !if a Friday

       l:Name = 'ARBOR DAY'
       do AddToQ

       break
    end
    l:date -= 1
 end
!--------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Nevada      routine
!31 October Nevada Day
!Friday after Thanksgiving Family Day
 
 do SecondThanksgiving

 l:date = date(10,31,r:yr)           !Nevada Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'NEVADA DAY'
 do AddToQ
!------------------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
NewJersey       routine
!12 February Lincoln's Birthday

!Tuesday on or after 2 November Election Day
!   In both odd and even years - New Jersey has State elections in odd years
!   and Federal elections are of course in even years.
!   Both types of election are a holiday.
 
 do LincolnsBirthday

 l:date = date(11,2,r:yr)              !November Election Day - regardless of year
 loop
    if l:date % 7 = 2                  !if a Tuesday

       l:Name = 'NOVEMBER ELECTION DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!-------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
RhodeIsland         routine
!4 May Rhode Island Independence Day
!2nd Monday in August Victory Day
!Tuesday on or after 2 November Election Day
 
 do NovElectionDay

 l:date = date(5,4,r:yr)           !Rhode Island Independence Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'RHODE ISLAND INDEPENDENCE DAY'
 do AddToQ
!------------------------
 l:date = date(8,1,r:yr)            !Victory Day
 loop
    if l:date % 7 = 1               !if a Monday
       l:date += 7                  !add a week

       l:Name = 'VICTORY DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!--------------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Texas       routine
!19 January Confederate Heroes' Day
!2 March Texas Independence Day
!21 April San Jacinto Day
!19 June Emancipation Day in Texas
!27 August Lyndon Baines Johnson Day
!The Day after Thanksgiving Thanksgiving 2nd Day
!24 December Christmas Eve
!26 December Boxing Day
!31 March César Chávez Day

 do SecondThanksgiving
 do XmasEveDay        
 do BoxingDay         

 l:date = date(1,19,r:yr)           !Confederate Heroes' Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'CONFEDERATE HEROES'' DAY'
 do AddToQ
!-----------
 l:date = date(3,2,r:yr)           !Texas Independence Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'TEXAS INDEPENDENCE DAY'
 do AddToQ
!-----------
 l:date = date(4,21,r:yr)           !San Jacinto Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'SAN JACINTO DAY'
 do AddToQ
!-----------
 l:date = date(6,19,r:yr)           !Emancipation Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'EMANCIPATION DAY'
 do AddToQ
!-----------
 l:date = date(8,27,r:yr)           !Lyndon Baines Johnson Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'LYNDON BAINES JOHNSON DAY'
 do AddToQ
!-----------
 l:date = date(3,31,r:yr)           !César Chávez Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'CéSAR CHáVEZ DAY'
 do AddToQ
!-----------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Utah        routine
!24 July Pioneer Day

 l:date = date(7,24,r:yr)           !Pioneer Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'PIONEER DAY'
 do AddToQ
!-----------

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Vermont     routine
!12 February Lincoln's Birthday
!1st Tuesday in March Town Meeting Day
!16 August Bennington Battle Day
 
 do LincolnsBirthday

 l:date = date(3,1,r:yr)            !Town Meeting Day
 loop
    if l:date % 7 = 2               !if a Tuesday

       l:Name = 'TOWN MEETING DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!--------------

 l:date = date(8,16,r:yr)           !Bennington Battle Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'BENNINGTON BATTLE DAY'
 do AddToQ
!-----------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Virginia        routine
!3rd Monday in January Lee-Jackson-King Day
!20th January Inauguration Day

 l:date = date(1,1,r:yr)            !Lee-Jackson-King Day
 loop
    if l:date % 7 = 1               !if a Monday

       l:Name = 'LEE-JACKSON-KING DAY'
       do AddToQ

       break
    end
    l:date += 1
 end
!--------------

 l:date = date(1,20,r:yr)           !Inauguration Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'INAUGURATION DAY'
 do AddToQ
!-----------
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
WestVirginia        routine
!12 February Lincoln's Birthday
!20 June West Virginia Day
!24 December Christmas Eve
!31 December New Year's Eve
 
 do LincolnsBirthday
 do XmasEveDay

 l:date = date(6,20,r:yr)           !West Virginia Day
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'WEST VIRGINIA DAY'
 do AddToQ
!-----------

 l:date = date(12,31,r:yr)           !New Year's Eve
 if l:date % 7 = 6                  !if a Saturday
    l:date -= 1                     !set to Friday
 end
 if l:date % 7 = 0                  !if a Sunday
    l:date += 1                     !set to Monday
 end

 l:Name = 'NEW YEAR''s EVE'
 do AddToQ
!-----------
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================ 
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html) 
! 
!    This file is part of Devuna-CyberTools (https://github.com/Devuna/Devuna-CyberTools) 
! 
!    Devuna-CyberTools is free software: you can redistribute it and/or modify 
!    it under the terms of the GNU General Public License as published by 
!    the Free Software Foundation, either version 3 of the License, or 
!    (at your option) any later version. 
! 
!    Devuna-CyberTools is distributed in the hope that it will be useful, 
!    but WITHOUT ANY WARRANTY; without even the implied warranty of 
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
!    GNU General Public License for more details. 
! 
!    You should have received a copy of the GNU General Public License 
!    along with this file.  If not, see <http://www.gnu.org/licenses/>. 
! ================================================================================ 
!EndRegion Notices
[END]
[END]
[PROCEDURE]
NAME Calendar
PROTOTYPE '(*? PassedDate),BYTE,PROC'
PARAMETERS '(*? PassedDate) !,BYTE,PROC'
GLOBAL
[COMMON]
DESCRIPTION 'Calendar'
FROM ABC Window
MODIFIED '2017/06/09' '22:20:00'
[DATA]
[SCREENCONTROLS]
! PROMPT('Files Opened:'),USE(?FilesOpened:Prompt)
! ENTRY(@n3),USE(FilesOpened)
[REPORTCONTROLS]
! STRING(@n3),USE(FilesOpened)
FilesOpened              BYTE
!!> GUID('d873de2f-65ba-4549-9257-0dced9b6da60'),PROMPT('Files Opened:'),HEADER('Files Opened'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('l Calendar Date:'),USE(?lCalendarDate:Prompt)
! ENTRY(@n-14),USE(lCalendarDate),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(lCalendarDate),RIGHT(1)
lCalendarDate            LONG
!!> GUID('07bd0434-2842-45a8-b645-edb41ca2d45e'),PROMPT('l Calendar Date:'),HEADER('l Calendar Date'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Ret Val:'),USE(?RetVal:Prompt)
! ENTRY(@n3),USE(RetVal)
[REPORTCONTROLS]
! STRING(@n3),USE(RetVal)
RetVal                   BYTE
!!> GUID('6fa63392-ed5f-4b96-ad05-9259d6da2681'),PROMPT('Ret Val:'),HEADER('Ret Val'),PICTURE(@n3)
[PROMPTS]
%ClassItem UNIQUE DEFAULT  ('Default', 'WindowToolbar')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 2
WHEN  ('Default') ('WindowManager')
WHEN  ('WindowToolbar') ('ToolbarClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 2
WHEN  ('Default') ('')
WHEN  ('WindowToolbar') ('')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 1
WHEN  ('Default') ('Init {19}PROCEDURE(),BYTE,PROC,DERIVED', 'Kill {19}PROCEDURE(),BYTE,PROC,DERIVED', |
  'TakeAccepted {11}PROCEDURE(),BYTE,PROC,DERIVED', 'TakeEvent {14}PROCEDURE(),BYTE,PROC,DERIVED', |
  'TakeWindowEvent        PROCEDURE(),BYTE,PROC,DERIVED')

%ReturnValue FIELD  (RetVal)
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 2
WHEN  ('Default') ('ThisWindow')
WHEN  ('WindowToolbar') ('Toolbar')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 2
WHEN  ('Default') (1)
WHEN  ('WindowToolbar') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 2
WHEN  ('Default') (1)
WHEN  ('WindowToolbar') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 2
WHEN  ('Default') ('AsciiFileClass')
WHEN  ('WindowToolbar') ('AsciiFileClass')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 2
WHEN  ('Default') (0)
WHEN  ('WindowToolbar') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 1
WHEN  ('WindowToolbar')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 1
WHEN  ('WindowToolbar')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ButtonAction DEPEND %Control DEFAULT TIMES 4
WHEN  ('?Calendar') ('No Special Action')
WHEN  ('?CalendarFrame') ('No Special Action')
WHEN  ('?Cancel') ('No Special Action')
WHEN  ('?Select') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Cancel') ('')
WHEN  ('?Select') ('')

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Cancel') ('')
WHEN  ('?Select') ('')

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 2
WHEN  ('?Cancel') ()
WHEN  ('?Select') ()

%ButtonThread DEPEND %Control LONG TIMES 2
WHEN  ('?Cancel') (0)
WHEN  ('?Select') (0)

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 4
WHEN  ('?Calendar') ('25000')
WHEN  ('?CalendarFrame') ('25000')
WHEN  ('?Cancel') ('25000')
WHEN  ('?Select') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Cancel') ('')
WHEN  ('?Select') ('')

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 2
WHEN  ('?Cancel') ()
WHEN  ('?Select') ()

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 2
WHEN  ('?Cancel') (0)
WHEN  ('?Select') (0)

%ButtonRequest DEPEND %Control DEFAULT TIMES 4
WHEN  ('?Calendar') ('None')
WHEN  ('?CalendarFrame') ('None')
WHEN  ('?Cancel') ('None')
WHEN  ('?Select') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Cancel') ('')
WHEN  ('?Select') ('')

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 2
WHEN  ('?Cancel') ()
WHEN  ('?Select') ()

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 4
WHEN  ('?Calendar') (1)
WHEN  ('?CalendarFrame') (1)
WHEN  ('?Cancel') (1)
WHEN  ('?Select') (1)

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 4
WHEN  ('?Calendar')TIMES 0
WHEN  ('?CalendarFrame')TIMES 0
WHEN  ('?Cancel')TIMES 0
WHEN  ('?Select')TIMES 0

%CheckedEnables DEPEND %Control MULTI LONG TIMES 0

%CheckedControl1 DEPEND %CheckedEnables DEFAULT TIMES 0

%CheckedControl1Action DEPEND %CheckedEnables DEFAULT TIMES 4
WHEN  ('?Calendar')TIMES 0
WHEN  ('?CalendarFrame')TIMES 0
WHEN  ('?Cancel')TIMES 0
WHEN  ('?Select')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 4
WHEN  ('?Calendar')TIMES 0
WHEN  ('?CalendarFrame')TIMES 0
WHEN  ('?Cancel')TIMES 0
WHEN  ('?Select')TIMES 0

%UnCheckedEnables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl1 DEPEND %UnCheckedEnables DEFAULT TIMES 0

%UnCheckedControl1Action DEPEND %UnCheckedEnables DEFAULT TIMES 4
WHEN  ('?Calendar')TIMES 0
WHEN  ('?CalendarFrame')TIMES 0
WHEN  ('?Cancel')TIMES 0
WHEN  ('?Select')TIMES 0

%GlobalObject DEPEND %ClassItem DEFAULT TIMES 2
WHEN  ('Default') ('NO')
WHEN  ('WindowToolbar') ('NO')

%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (0)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 1
WHEN  ('?CalendarFrame') ('Default')

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 0

%ProcedureOneInstance LONG  (0)
%FieldGradientColorType DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Calendar') ('Off')
WHEN  ('?CalendarFrame') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Calendar') ('')
WHEN  ('?CalendarFrame') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('?Calendar') (0)
WHEN  ('?CalendarFrame') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 2
WHEN  ('?Calendar') (-1)
WHEN  ('?CalendarFrame') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('?Calendar') (0)
WHEN  ('?CalendarFrame') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 2
WHEN  ('?Calendar') (-1)
WHEN  ('?CalendarFrame') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('?Calendar') (0)
WHEN  ('?CalendarFrame') (0)

%PreserveVarsLoc MULTI LONG  ()
%PreserveVarLoc DEPEND %PreserveVarsLoc DEFAULT TIMES 0

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 0

%AIEnableMimicControl DEPEND %Control LONG TIMES 0

%AIMimicControl DEPEND %Control DEFAULT TIMES 0

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 0

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 0

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 0

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 0

[EMBED]
EMBED %ControlEventHandling
[INSTANCES]
WHEN '?Cancel'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
GlobalResponse = RequestCancelled
[GROUP]
PRIORITY 5100
INSTANCE 2
[END]
[END]
WHEN '?Select'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
PassedDate = lCalendarDate
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5100
PROPERTY:END
GlobalResponse = RequestCompleted
[GROUP]
PRIORITY 5200
INSTANCE 1
[END]
[END]
WHEN '?Clear '
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 6000
PROPERTY:END
PassedDate = 0
GlobalResponse = RequestCompleted
POST(Event:CloseWindow)
[END]
[END]
[END]
EMBED %WindowManagerMethodCodeSection
[INSTANCES]
WHEN 'Init'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 8001
PROPERTY:END
lCalendarDate = PassedDate  
[END]
[END]
[END]
EMBED %WindowEventHandling
[INSTANCES]
WHEN 'CloseWindow'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
RetVal = GlobalResponse      
[END]
WHEN 'OpenWindow'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 7500
PROPERTY:END
Calendar:6.SetDateRange(DATE(01,01,1801),DATE(12,31,9999))
Calendar:6.SetBackGrColor(0)
!uxTheme.SetWindowTheme(Calendar:6.GethWnd(),szNull,szNull)
!uxTheme.EnableTheming(FALSE)
[END]
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 90
PROPERTY:END
!region Notices
! ================================================================================ 
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html) 
! 
!    This file is part of Devuna-CyberTools (https://github.com/Devuna/Devuna-CyberTools) 
! 
!    Devuna-CyberTools is free software: you can redistribute it and/or modify 
!    it under the terms of the GNU General Public License as published by 
!    the Free Software Foundation, either version 3 of the License, or 
!    (at your option) any later version. 
! 
!    Devuna-CyberTools is distributed in the hope that it will be useful, 
!    but WITHOUT ANY WARRANTY; without even the implied warranty of 
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
!    GNU General Public License for more details. 
! 
!    You should have received a copy of the GNU General Public License 
!    along with this file.  If not, see <http://www.gnu.org/licenses/>. 
! ================================================================================ 
!EndRegion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3000
PROPERTY:END
!uxTheme              CuxTheme
[END]
EMBED %WindowManagerMethodDataSection
[INSTANCES]
WHEN 'TakeWindowEvent'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3500
PROPERTY:END
szNull   CSTRING('')
[END]
[END]
[END]
[END]
[ADDITION]
NAME KCR KCR_SetClassLong
[INSTANCE]
INSTANCE 3
[PROMPTS]
%TplName DEFAULT  ('KCR_SetClassLong (Devuna)')
%TplDescription DEFAULT  ('Change Window Style')
%RemoveIcon LONG  (0)
%OverrideDefaultIcon LONG  (0)
%Icon DEFAULT  ('')
%EnableSystemMenuBox LONG  (1)
%IncludeQuestionMark LONG  (0)
%TransparentWindow LONG  (0)
%DisableMinimizeBox LONG  (1)
[ADDITION]
NAME ABC CloseCurrentWindow
[INSTANCE]
INSTANCE 2
[INSTANCE]
INSTANCE 1
[ADDITION]
NAME KCR KCR_SubClassClientWindow
[INSTANCE]
INSTANCE 5
[PROMPTS]
%TplName DEFAULT  ('KCR_SubClassClientWindow (Devuna)')
%TplDescription DEFAULT  ('SubClass Client Window Extension')
[ADDITION]
NAME KCR KCR_Calendar
[INSTANCE]
INSTANCE 6
PARENT 5
[PROMPTS]
%TplName DEFAULT  ('KCR_Calendar (Devuna)')
%TplDescription DEFAULT  ('Add Calendar to Procedure')
%Calendar DEFAULT  ('?Calendar')
%DateField DEFAULT  ('lCalendarDate')
%ChangeNotificationEvent DEFAULT  ('EVENT:USER')
[WINDOW]
Window  WINDOW('Select Date...'),AT(,,120,106),FONT('Segoe UI Semilight',11),DOUBLE,CENTER, |
          ICON('Calendar.ico'),GRAY,IMM,HLP('Calendar')
          BUTTON('&Select'),AT(10,88,49,14),USE(?Select),LEFT,ICON('OK.ICO'),#ORIG(?Button1), |
            #ORDINAL(1)
          BUTTON('Cancel'),AT(62,88,49,14),USE(?Cancel),LEFT,ICON('CANCEL.ICO'),#ORIG(?Button2), |
            #ORDINAL(2)
          SHEET,AT(2,2,116,82),USE(?CalendarFrame),#ORIG(?Box1),#ORDINAL(3)
          END
          BOX,AT(3,3,114,80),USE(?Calendar),COLOR(COLOR:Black),FILL(009E6D39h),LINEWIDTH(1), |
            #ORIG(?Box2),#ORDINAL(4)
        END

[END]
