[MODULE]
[COMMON]
DESCRIPTION 'Generated Source Module'
FROM ABC GENERATED
MODIFIED '2017/06/09' '22:11:11'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
!region Notices
! ================================================================================ 
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html) 
! 
!    This file is part of Devuna-CyberTools (https://github.com/Devuna/Devuna-CyberTools) 
! 
!    Devuna-CyberTools is free software: you can redistribute it and/or modify 
!    it under the terms of the GNU General Public License as published by 
!    the Free Software Foundation, either version 3 of the License, or 
!    (at your option) any later version. 
! 
!    Devuna-CyberTools is distributed in the hope that it will be useful, 
!    but WITHOUT ANY WARRANTY; without even the implied warranty of 
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
!    GNU General Public License for more details. 
! 
!    You should have received a copy of the GNU General Public License 
!    along with this file.  If not, see <http://www.gnu.org/licenses/>. 
! ================================================================================ 
!EndRegion Notices
[END]
[END]
[PROCEDURE]
NAME PutRegistry
PROTOTYPE '(STRING pSectionName, STRING pTokenLabel, STRING pNewValue, <<STRING pFileName>, <<STRING pUserName>)'
PARAMETERS '(STRING pSectionName, STRING pTokenLabel, STRING pNewValue, <<STRING pFileName>, <<STRING pUserName>)'
[COMMON]
DESCRIPTION 'Put Registry Information'
FROM ABC Source
MODIFIED '2017/06/09' '22:56:53'
[PROMPTS]
%ReturnValue FIELD  ()
%DeleteThreadQueueEntry LONG  (0)
%DoNotUsePUSHPOP LONG  (0)
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================ 
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html) 
! 
!    This file is part of Devuna-CyberTools (https://github.com/Devuna/Devuna-CyberTools) 
! 
!    Devuna-CyberTools is free software: you can redistribute it and/or modify 
!    it under the terms of the GNU General Public License as published by 
!    the Free Software Foundation, either version 3 of the License, or 
!    (at your option) any later version. 
! 
!    Devuna-CyberTools is distributed in the hope that it will be useful, 
!    but WITHOUT ANY WARRANTY; without even the implied warranty of 
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
!    GNU General Public License for more details. 
! 
!    You should have received a copy of the GNU General Public License 
!    along with this file.  If not, see <http://www.gnu.org/licenses/>. 
! ================================================================================ 
!EndRegion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
SAV::RECORD  like(REG:RECORD),auto
loc:UserName like(GlobalUserName),auto
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if omitted(5)
    if GlobalUserName
      loc:UserName=GlobalUserName
    else
      loc:UserName='COMMON'
    end
  else
    loc:UserName=pUserName
  end
  loop
!    open(REGISTRY,READ_WRITE+DENY_NONE)
    open(REGISTRY,ReadWrite+DenyNone)
    case errorcode()
    of 0 orof 51 orof 52                           !OPENED or ALREADY OPEN
      break
    of 02                                          ! NOT FOUND
      create(REGISTRY)
      if errorcode()
        halt(clip(error())&' creating '&clip(name(REGISTRY)))
      end
      cycle
    else
      halt(clip(error())&' opening '&clip(name(REGISTRY)))
    end
  end
  reg:UserName=loc:UserName
  reg:SectionName=pSectionName
  reg:TokenLabel=pTokenLabel
  get(REGISTRY,REG:K1)
  if errorcode()
    reg:UserName   =loc:UserName
    reg:SectionName=pSectionName
    reg:TokenLabel =pTokenLabel
    reg:TokenValue =pNewValue
    add(REGISTRY)
  else
    reg:TokenValue=pNewValue
    do UPDATEFILE
  end
  close(REGISTRY)
!  RETURN Level:Fatal
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
UPDATEFILE ROUTINE
 SAV::RECORD=REG:RECORD
 hold(REGISTRY,2)
 get(REGISTRY,pointer(REGISTRY))
 REG:RECORD=SAV::RECORD
 if ~errorcode()=43   !(record not yet held)
   put(REGISTRY)
   if errorcode()
     halt(clip(error())&' updating '&name(REGISTRY))
   end
 end
[END]
[END]
[PROCEDURE]
NAME GetRegistry
PROTOTYPE '(STRING pSectionName, STRING pTokenLabel, <<STRING pDefaultValue>, <<STRING pDummyParameter>, <<STRING pUserName>),STRING'
PARAMETERS '(STRING pSectionName, STRING pTokenLabel, <<STRING pDefaultValue>, <<STRING pDummyParameter>, <<STRING pUserName>) !,STRING'
[COMMON]
DESCRIPTION 'Get Registry Data'
FROM ABC Source
MODIFIED '2017/06/09' '22:54:06'
[DATA]
[SCREENCONTROLS]
! PROMPT('Ret Str:'),USE(?RetStr:Prompt)
! TEXT,USE(RetStr),BOXED
[REPORTCONTROLS]
! TEXT,USE(RetStr),BOXED
RetStr                   STRING(1000)
!!> GUID('e91dd3b8-7c6c-428a-baf7-2156358c23b6'),PROMPT('Ret Str:'),HEADER('Ret Str'),PICTURE(@s255)
[PROMPTS]
%ReturnValue FIELD  (RetStr)
%DeleteThreadQueueEntry LONG  (0)
%DoNotUsePUSHPOP LONG  (0)
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================ 
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html) 
! 
!    This file is part of Devuna-CyberTools (https://github.com/Devuna/Devuna-CyberTools) 
! 
!    Devuna-CyberTools is free software: you can redistribute it and/or modify 
!    it under the terms of the GNU General Public License as published by 
!    the Free Software Foundation, either version 3 of the License, or 
!    (at your option) any later version. 
! 
!    Devuna-CyberTools is distributed in the hope that it will be useful, 
!    but WITHOUT ANY WARRANTY; without even the implied warranty of 
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
!    GNU General Public License for more details. 
! 
!    You should have received a copy of the GNU General Public License 
!    along with this file.  If not, see <http://www.gnu.org/licenses/>. 
! ================================================================================ 
!EndRegion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
loc:UserName like(GlobalUserName),auto
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if omitted(5)
    if GlobalUserName
      loc:UserName=GlobalUserName
    else
      loc:UserName='COMMON'
    end
  else
    loc:UserName=pUserName
  end
  loop
!    open(REGISTRY,READ_ONLY+DENY_NONE)
    open(REGISTRY,ReadOnly+DenyNone)
    if errorcode()
      case errorcode()
      of 51 orof 52                                ! OPENED or ALREADY OPEN
        break
      of 02                                        ! NOT FOUND
        create(REGISTRY)
        if errorcode()
          halt(clip(error())&' creating '&clip(name(REGISTRY)))
        end
        cycle
      else
        halt(clip(error())&' opening '&clip(name(REGISTRY)))
        halt(0,'')
        break
      end
    else
      break
    end
  end
  reg:UserName=loc:UserName
  reg:SectionName=pSectionName
  reg:TokenLabel=pTokenLabel
  get(REGISTRY,REG:K1)
  if errorcode() or ~reg:TokenValue
    RetStr=pDefaultValue
  else
    RetStr=reg:TokenValue
  end
  close(REGISTRY)
  RetStr = (clip(left(RetStr)))
  RETURN Level:Fatal
[END]
[END]
[PROCEDURE]
NAME DeleteRegistry
PROTOTYPE '(STRING pSectionName, STRING pTokenLabel, STRING pNewValue, <<STRING pFileName>, <<STRING pUserName>)'
PARAMETERS '(STRING pSectionName, STRING pTokenLabel, STRING pNewValue, <<STRING pFileName>, <<STRING pUserName>)'
[COMMON]
DESCRIPTION 'Delete Registry Information'
FROM ABC Source
MODIFIED '2017/06/09' '22:52:21'
[PROMPTS]
%ReturnValue FIELD  ()
%DeleteThreadQueueEntry LONG  (0)
%DoNotUsePUSHPOP LONG  (0)
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================ 
! Notice : Copyright (C) 2017, Devuna
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html) 
! 
!    This file is part of Devuna-CyberTools (https://github.com/Devuna/Devuna-CyberTools) 
! 
!    Devuna-CyberTools is free software: you can redistribute it and/or modify 
!    it under the terms of the GNU General Public License as published by 
!    the Free Software Foundation, either version 3 of the License, or 
!    (at your option) any later version. 
! 
!    Devuna-CyberTools is distributed in the hope that it will be useful, 
!    but WITHOUT ANY WARRANTY; without even the implied warranty of 
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
!    GNU General Public License for more details. 
! 
!    You should have received a copy of the GNU General Public License 
!    along with this file.  If not, see <http://www.gnu.org/licenses/>. 
! ================================================================================ 
!EndRegion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
SAV::RECORD  like(REG:RECORD),auto
loc:UserName like(GlobalUserName),auto
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if omitted(5)
    if GlobalUserName
      loc:UserName=GlobalUserName
    else
      loc:UserName='COMMON'
    end
  else
    loc:UserName=pUserName
  end
  loop
!    open(REGISTRY,READ_WRITE+DENY_NONE)
    open(REGISTRY,ReadWrite+DenyNone)
    case errorcode()
    of 0 orof 51 orof 52                           !OPENED or ALREADY OPEN
      break
    of 02                                          ! NOT FOUND
      create(REGISTRY)
      if errorcode()
        halt(clip(error())&' creating '&clip(name(REGISTRY)))
      end
      cycle
    else
      halt(clip(error())&' opening '&clip(name(REGISTRY)))
    end
  end
  reg:UserName=loc:UserName
  reg:SectionName=pSectionName
  reg:TokenLabel=pTokenLabel
  get(REGISTRY,REG:K1)
  if ~errorcode()
    reg:TokenValue=pNewValue
    do UPDATEFILE
  end
  close(REGISTRY)
!  RETURN Level:Fatal
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
UPDATEFILE ROUTINE
 SAV::RECORD=REG:RECORD
 hold(REGISTRY,2)
 get(REGISTRY,pointer(REGISTRY))
 REG:RECORD=SAV::RECORD
 if ~errorcode()=43   !(record not yet held)
   delete(REGISTRY)
   if errorcode()
     halt(clip(error())&' updating '&name(REGISTRY))
   end
 end
[END]
[END]
[END]
